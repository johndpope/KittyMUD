%{
#import <Foundation/Foundation.h>
#import "XDFReference.h"
#import "XDFExpressionReference.h"
	
void XDFerror(const char *str)
{
	fprintf(stderr,"error: %s\n",str);
}
	
int XDFwrap()
{
	return 1;
}
	
#define YYPARSE_PARAM parm
%}

%union {
	NSNumber* num;
	NSString* text;
	XDFOpType op;
	XDFReference* ref;
}

%token STATREFSTART STATREFEND LPAREN RPAREN FUNCSTART FUNCEND VARREFSTART VARREFEND
%token <op> OPADD OPSUBTRACT OPMULTIPLY OPDIVIDE OPPERCENT OPMODULUS
%token <num> NUMBER
%token <text> IDENTIFIER

%type <ref> simplereference statreference varreference funcreference groupexpression simpleopreference expression expressions simpleoperation
%type <op> unooperation duooperation

%left OPADD OPSUBTRACT
%left OPMULTIPLY OPDIVIDE OPMODULUS
%left OPPERCENT

%%
expressions: /* empty */ { *((id*)parm) = nil; } | expressions expression { *((id*)parm) = $2; } ;

expression: simpleoperation { $$ = $1; } | simplereference { $$ = $1; } | groupexpression { $$ = $1; } ;

groupexpression: LPAREN expression RPAREN {	$$ = $2; } ;

simpleoperation: simpleopreference duooperation simpleopreference { $$ = [XDFReference createReferenceOfType:XDFExpressionRef, $2, $1, $3]; } | simpleopreference unooperation { $$ = [XDFReference createReferenceOfType:XDFExpressionRef, $2, $1]; } ;

duooperation: OPADD { $$ = $1; } | OPSUBTRACT {	$$ = $1; } | OPMULTIPLY { $$ = $1; } | OPDIVIDE { $$ = $1; } | OPMODULUS { $$ = $1; } ;

unooperation: OPPERCENT { $$ = $1; } ;

simpleopreference: groupexpression { $$ = $1; } | simplereference { $$ = $1; } ;

simplereference: NUMBER { $$ = [XDFReference createReferenceOfType:XDFNumberRef, $1]; } | statreference { $$ = $1; } | varreference { $$ = $1; } | funcreference { $$ = $1; } ;

statreference: STATREFSTART IDENTIFIER STATREFEND { $$ = [XDFReference createReferenceOfType:XDFStatRef, $2]; } ;

varreference: VARREFSTART IDENTIFIER VARREFEND { $$ = [XDFReference createReferenceOfType:XDFVarRef, $2]; } ;

funcreference: FUNCSTART IDENTIFIER LPAREN expression RPAREN FUNCEND { $$ = [XDFReference createReferenceOfType:XDFFuncRef, $2, $4]; } ;
%%